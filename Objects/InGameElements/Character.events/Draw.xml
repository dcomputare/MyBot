<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="DRAW" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">xoffset = view_xview[0];
yoffset = view_yview[0];
xsize = view_wview[0];
ysize = view_hview[0];
    
if distance_to_point(xoffset+xsize/2,yoffset+ysize/2) &gt; 800 exit;

var xr, yr;
xr = round(x);
yr = round(y);

if global.myself == -1 &amp;&amp; cloakAlpha==1{
    image_alpha = 1;
} else if((global.myself.object == id &amp;&amp; cloakAlpha==1) || (global.myself.object == -1)) {
    image_alpha = 1;
} else if (!invisible) {
    image_alpha = cloakAlpha;
} else {
    exit;
}
   
if global.myself.team == team &amp;&amp; cloakAlpha&lt;0.5 {
    if currentWeapon.readyToStab==true{
        cloakAlpha=0.5;
        image_alpha=0.5;
    }
}

if lastNode != -1
{
    draw_circle(lastNode.x, lastNode.y, 10, 0)
}

if team == global.myself.team &amp;&amp; (id != global.myself.object.id || global.showHealthBar == 1){
    draw_set_alpha(1);
    draw_healthbar(xr-10, yr-30, xr+10, yr-25,hp*100/maxHp,c_black,c_red,c_green,0,true,true);
}    
if(distance_to_point(mouse_x, mouse_y)&lt;25) {
    if cloak &amp;&amp; team!=global.myself.team exit;
    draw_set_alpha(1);
    draw_set_halign(fa_center);
    draw_set_valign(fa_bottom);
    if(team==TEAM_RED) {
        draw_set_color(c_red);
    } else {
        draw_set_color(c_blue);
    }
if player.object_index == BotPlayer and global.botDebugMode draw_text(xr, yr-35, player.task);
else draw_text(xr, yr-35, player.name);
}  

draw_set_alpha(1);
if team == TEAM_RED ubercolour = c_red;
if team == TEAM_BLUE ubercolour = c_blue;
    
if omnomnomnom == true {
    draw_sprite_ext(OmnomnomnomS,omnomnomnomindex,xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
    if ubered == 1 draw_sprite_ext(OmnomnomnomS,omnomnomnomindex,xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
}
else if taunting == true{
    draw_sprite_ext(tauntsprite,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
    if ubered == 1 draw_sprite_ext(tauntsprite,tauntindex,xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
}
else if player.humiliated {
    draw_sprite_ext(humiliationPoses,floor(animationImage)+humiliationOffset,xr,yr,image_xscale,image_yscale,image_angle,c_white,cloakAlpha);
}
else if taunting == false {
    if ubered == 0 draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,cloakAlpha);
    else if ubered == 1 {
        draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,c_white,1);
        draw_sprite_ext(sprite_index,floor(animationImage+animationOffset),xr,yr,image_xscale,image_yscale,image_angle,ubercolour,0.7);
    }
}
if (burnDuration &gt; 0 or burnIntensity &gt; 0) {
    for(i = 0; i &lt; numFlames * burnIntensity / maxIntensity; i += 1)
    {
        draw_sprite_ext(FlameS, alarm[5] + i + random(2), x + flameArray_x[i], y + flameArray_y[i], 1, 1, 0, c_white, burnDuration / maxDuration * 0.71 + 0.35);
    }  
}
</argument>
      </arguments>
    </action>
  </actions>
</event>
